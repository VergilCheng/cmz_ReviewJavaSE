/**
 * 享元模式：内存属于稀缺资源，不要随便浪费资源。如果有很多歌完全相同或者相似的对象，我们可以通过
 * 享元模式，节省内存。但是可能会造成运行时间的边长
 *
 * 核心：
 * 1.享元模式以共享的方式高效地支持大量细粒度对象的重用
 * 2.享元对象能够做到共享的关键是区分了内部状态和外部状态
 *      内部状态：可以共享，不会随着环境变化而改变
 *      外部状态：不可以共享，会随着环境变化而改变
 *
 * 优点：极大减少了内存中对象的数量；相同或相似的对象内存中只存一份，极大的节约资源，提高系统性能；外部状态相对独立，不影响内部状态
 * 缺点：模式较复杂，使程序逻辑复杂化；为了节省内存，共享了内部状态，分离出外部状态，而读取外部状态使运行时间变长。
 * 也就是时间换空间
 */
package GOF.FlyWeight;